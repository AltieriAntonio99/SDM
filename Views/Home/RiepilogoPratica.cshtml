@model SDM.Models.RiepilogoPratica

@{
    ViewBag.Title = "Riepilogo Pratica";
}

@if (Model.type == "Eventi" || Model.type == "StudioProfessionale")
{
    <div class="patronatoStyle">
        <h2 class="titlePatronato">Riepilogo pratica</h2>

        <div class="patronatoAddForm">
            <div class="rowForm">
                <div class="colForm" style="display: none">
                    <input name="Id" value="@Request.QueryString["idPratica"]" />
                </div>
                <div class="colForm">
                    @Html.LabelFor(model => model.pratica.Nome, htmlAttributes: new { @class = "labelForm" })
                    <div>
                        @Html.EditorFor(model => model.pratica.Nome, new { htmlAttributes = new { @class = "inputForm", disabled = true, value = Model.pratica.Nome } })
                    </div>
                </div>
                <div class="colForm">
                    @Html.LabelFor(model => model.pratica.Cognome, htmlAttributes: new { @class = "labelForm" })
                    <div>
                        @Html.EditorFor(model => model.pratica.Cognome, new { htmlAttributes = new { @class = "inputForm", disabled = true, value = Model.pratica.Cognome } })
                    </div>
                </div>
            </div>
            <div class="rowForm">
                <div class="colForm">
                    @Html.LabelFor(model => model.pratica.TipologiaPratica, htmlAttributes: new { @class = "labelForm" })
                    <div>
                        @Html.EditorFor(model => model.pratica.TipologiaPratica, new { htmlAttributes = new { @class = "inputForm", disabled = true, value = Model.pratica.TipologiaPratica } })
                    </div>
                </div>
                <div class="colForm">
                    @Html.LabelFor(model => model.pratica.Anno, htmlAttributes: new { @class = "labelForm" })
                    <div>
                        @Html.EditorFor(model => model.pratica.Anno, new { htmlAttributes = new { @class = "inputForm", disabled = true, value = Model.pratica.Anno } })
                    </div>
                </div>
            </div>
            <div class="rowForm">
                <div class="colForm colFormTextArea">
                    @Html.LabelFor(model => model.pratica.Note, htmlAttributes: new { @class = "labelForm" })
                    <div>
                        @Html.TextAreaFor(model => model.pratica.Note, 2, 2, new { @class = "inputForm", disabled = true, value = Model.pratica.Note })
                    </div>
                </div>
            </div>
            <div>
                <h2 class="titlePatronato" style="margin: 15px">Riepilogo Allegati</h2>

                <table id="patronatoTable" class="table table-striped table-sm" cellspacing="0" width="100%">
                    <thead>
                        <tr>
                            <th class="th-sm">
                                Nome
                            </th>
                            <th class="th-sm">
                                Data Caricamento
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @{ foreach (var item in Model.attachment)
                            {
                                <tr>
                                    <td>@Html.ActionLink(@item.Nome, "DownloadFile", Request.QueryString["type"], new { idFile = @item.Id }, null)</td>
                                    <td>@item.LastUpdate</td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
            <div class="rowFormButton">
                <div class="colFormBack">
                    @Html.ActionLink("Torna indietro", "Index", Request.QueryString["type"], null, null)
                </div>
                <div class="colFormButton">
                    <input type="submit" value="Salva" class="" />
                </div>
            </div>
        </div>
    </div>
}
else
{
    <div class="patronatoStyle">
        <h2 class="titlePatronato">Riepilogo pratica</h2>

        <div class="patronatoAddForm">
            <div class="rowForm">
                <div class="colForm" style="display: none">
                    <input name="Id" value="@Request.QueryString["idPratica"]" />
                </div>
                <div class="colForm">
                    @Html.LabelFor(model => model.pratica.Nome, htmlAttributes: new { @class = "labelForm" })
                    <div>
                        @Html.EditorFor(model => model.pratica.Nome, new { htmlAttributes = new { @class = "inputForm", disabled = true, value = Model.pratica.Nome } })
                    </div>
                </div>
                <div class="colForm">
                    @Html.LabelFor(model => model.pratica.Cognome, htmlAttributes: new { @class = "labelForm" })
                    <div>
                        @Html.EditorFor(model => model.pratica.Cognome, new { htmlAttributes = new { @class = "inputForm", disabled = true, value = Model.pratica.Cognome } })
                    </div>
                </div>
            </div>
            <div class="rowForm">
                <div class="colForm">
                    @Html.LabelFor(model => model.pratica.Sottocategoria, htmlAttributes: new { @class = "labelForm" })
                    <div>
                        @Html.EditorFor(model => model.pratica.Sottocategoria, new { htmlAttributes = new { @class = "inputForm", disabled = true, value = Model.pratica.Sottocategoria } })
                    </div>
                </div>
                <div class="colForm">
                    @Html.LabelFor(model => model.pratica.Anno, htmlAttributes: new { @class = "labelForm" })
                    <div>
                        @Html.EditorFor(model => model.pratica.Anno, new { htmlAttributes = new { @class = "inputForm", disabled = true, value = Model.pratica.Anno } })
                    </div>
                </div>
            </div>
            <div class="rowForm">
                <div class="colForm colFormTextArea">
                    @Html.LabelFor(model => model.pratica.Note, htmlAttributes: new { @class = "labelForm" })
                    <div>
                        @Html.TextAreaFor(model => model.pratica.Note, 2, 2, new { @class = "inputForm", disabled = true, value = Model.pratica.Note })
                    </div>
                </div>
            </div>
            <div class="rowForm">
                <div class="colForm">
                    @Html.LabelFor(model => model.pratica.TipologiaPratica, htmlAttributes: new { @class = "labelForm" })
                    <div>
                        @Html.EditorFor(model => model.pratica.TipologiaPratica, new { htmlAttributes = new { @class = "inputForm", disabled = true, value = Model.pratica.TipologiaPratica } })
                    </div>
                </div>
            </div>
            <div>
                <h2 class="titlePatronato" style="margin: 15px">Riepilogo Allegati</h2>

                <table id="patronatoTable" class="table table-striped table-sm" cellspacing="0" width="100%">
                    <thead>
                        <tr>
                            <th class="th-sm">
                                Nome
                            </th>
                            <th class="th-sm">
                                Data Caricamento
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @{ foreach (var item in Model.attachment)
                            {
                                <tr>
                                    <td>@Html.ActionLink(@item.Nome, "DownloadFile", Request.QueryString["type"], new { idFile = @item.Id }, null)</td>
                                    <td>@item.LastUpdate</td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
            <div class="rowFormButton">
                <div class="colFormBack">
                    @Html.ActionLink("Torna indietro", "Index", Request.QueryString["type"], null, null)
                </div>
                <div class="colFormButton">
                    @Html.ActionLink("Modifica", "ModificaPratica", Request.QueryString["type"],  new { idPratica = Model.pratica.Id }, null)
                </div>
            </div>
        </div>
    </div>
}
<script>
    $(document).ready(function () {
        $('#patronatoTable').DataTable({
            "dom": '<"top"f>rt<"bottom"ipl>',
            "scrollX": true,
            "pagingType": "simple_numbers",
            "language": {
                "paginate": {
                    "previous": "<",
                    "next": ">"
                },
                "lengthMenu": "Mostra _MENU_ elementi per pagina",
                "zeroRecords": "Non ci sono elementi da mostrare",
                "info": "Mostra pagina _PAGE_ di _PAGES_",
                "infoEmpty": "Nessun elemento disponibile"
            },
            "drawCallback": function () {
                $('.dataTables_paginate > .pagination').addClass('customPagination');
            },
            "searching": false
        });
        $('.dataTables_length').addClass('bs-select');
    });

    submitForm = (item) => {
        $("#cestino" + item.id).submit();
    }
</script>